name: Build LuaTeX to WASM and Deploy

# ワークフローの実行トリガーを設定
on:
  # 1. 週に一度、日曜日の午前3時(UTC)に定期実行
  schedule:
    - cron: '0 3 * * 0'
  
  # 2. 手動でワークフローを実行できるようにする (GitHubリポジトリのActionsタブから)
  workflow_dispatch:

# GitHub Actionsがリポジトリに書き込みできるように権限を設定
permissions:
  contents: write

jobs:
  build-and-deploy:
    # 最新のUbuntu環境で実行
    runs-on: ubuntu-latest
    steps:
      # 1. このリポジトリのコードをチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Emscripten (C++ to WASM コンパイラ) をセットアップ
      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          # 特定のバージョンを指定することで、安定したビルド環境を維持します。
          emscripten-version: '3.1.55'

      # 3. ビルドに必要な依存パッケージをインストール
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y wget xz-utils texinfo build-essential

      # 4. TeX Liveの最新ソースコードをダウンロードして展開
      - name: Download and extract TeX Live source
        run: |
          wget -q https://ftp.math.utah.edu/pub/tex/historic/systems/texlive/2025/texlive-20250308-source.tar.xz
          tar -xf texlive-20250308-source.tar.xz
          # 分かりやすいようにディレクトリ名を変更
          mv texlive-20250308-source texlive-source
      
      # 5. LuaTeXをWebAssemblyにビルド
      - name: Build LuaTeX with Emscripten
        env:
          EM_CFLAGS: "-s USE_FREETYPE=1 -s USE_ZLIB=1 -s USE_HARFBUZZ=1"
          EM_LDFLAGS: "-s USE_FREETYPE=1 -s USE_ZLIB=1 -s USE_HARFBUZZ=1"
        run: |
          problematic_libs=("luajit" "freetype2" "harfbuzz" "zlib")
          
          problematic_libs=("luajit" "freetype2" "harfbuzz" "zlib" "graphite2")
          for lib in "${problematic_libs[@]}"; do
            if [ -d "texlive-source/libs/$lib" ]; then
              echo "Neutralizing configure script for $lib..."
              echo -e "#!/bin/sh\nexit 0" > "texlive-source/libs/$lib/configure"
              chmod +x "texlive-source/libs/$lib/configure"
            fi
          done
          
          mkdir build
          cd build
          
          emconfigure ../texlive-source/configure \
            --disable-all-pkgs \
            --disable-shared \
            --enable-static \
            --enable-kpathsea \
            --enable-web2c \
            --enable-luatex

          echo "Building dependencies (kpathsea)..."
          emmake make -C texk/kpathsea

          echo "Building luatex executable..."
          emmake make -C texk/web2c luatex

      # 6. 公開用のディレクトリとファイルを作成
      - name: Prepare artifacts for deployment
        run: |
          # 公開用のディレクトリを作成
          mkdir -p public
          
          # ビルドされたWASMとJSファイルをコピー
          # パスはビルド構成によって変わる可能性があります。エラー時はこのパスを確認してください。
          cp texlive-source/texk/web2c/luatex.js public/
          cp texlive-source/texk/web2c/luatex.wasm public/
          
          # ダウンロードページとなる簡単なHTMLを作成
          echo "<html>" > public/index.html
          echo "<head><meta charset=\"UTF-8\"><title>LuaTeX WASM Build</title></head>" >> public/index.html
          echo "<body>" >> public/index.html
          echo "<h1>LuaTeX WASM Build</h1>" >> public/index.html
          echo "<p>最終更新日時 (UTC): $(date -u)</p>" >> public/index.html
          echo '<ul>' >> public/index.html
          echo '<li><a href="luatex.js" download>luatex.js</a></li>' >> public/index.html
          echo '<li><a href="luatex.wasm" download>luatex.wasm</a></li>' >> public/index.html
          echo '</ul>' >> public/index.html
          echo "<p>このビルドはGitHub Actionsによって自動的に生成されました。</p>" >> public/index.html
          echo "</body></html>" >> public/index.html

      # 7. ビルド成果物をGitHub Pagesにデプロイ
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          # Actionsが自動生成するトークン
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # 公開するディレクトリを指定
          publish_dir: ./public